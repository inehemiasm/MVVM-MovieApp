apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'spoon'

android {
	compileSdkVersion 29
	buildToolsVersion "29.0.2"
	defaultConfig {
		applicationId "com.example.inehemias.mvvmmovieapp"
		minSdkVersion 26
		targetSdkVersion 29
		versionCode 1
		versionName "1.0"
		testInstrumentationRunner "com.example.inehemias.mvvmmovieapp.testutils.BaseTestClass"
	}
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
		}
	}
}

dependencies {
	implementation fileTree(dir: 'libs', include: ['*.jar'])
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
	implementation 'androidx.appcompat:appcompat:1.1.0'
	implementation 'androidx.core:core-ktx:1.2.0'
	implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
	testImplementation 'junit:junit:4.12'
	androidTestImplementation 'androidx.test.ext:junit:1.1.1'
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

	//ViewModel and LiveData
	implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'

	//Recyclerview
	implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha01'
	implementation 'androidx.cardview:cardview:1.0.0'

	// Retrofit
	implementation "com.squareup.retrofit2:retrofit:2.5.0"
	implementation "com.squareup.retrofit2:converter-gson:2.5.0"
	implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'

	// Gson
	implementation "com.google.code.gson:gson:2.8.5"

	// Glide
	implementation 'com.github.bumptech.glide:glide:4.11.0'

	// Paging
	implementation "androidx.paging:paging-runtime:2.1.1"

	//Rx
	implementation 'io.reactivex.rxjava2:rxjava:2.2.7'
	implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

	// Material
	implementation 'com.google.android.material:material:1.1.0'

	// Spoon
	implementation 'com.squareup.spoon:spoon-client:1.6.4'

	// Timber to log
	implementation 'com.jakewharton.timber:timber:4.7.1'
}

spoon {

	title = "Demo Test"

	// for debug output
	debug = true

	// To execute the tests device by device */
	sequential = true

	// To grant permissions to Android M >= devices */
	grantAllPermissions = true

	// Clear data before each test
	clearAppDataBeforeEachTest = true

	if(project.hasProperty('locale')) {
		instrumentationArgs.add("locale:" + project.locale)
	}
	if(project.hasProperty('suite')) {
		instrumentationArgs.add("suite:" + project.suite)
	}

	if(project.hasProperty('variable1')) {
		methodName = project.variable1
	}

	if(project.hasProperty('title')) {
		title = project.title
	}
}
